["sbt.Task[scala.collection.Seq[java.nio.file.Path]]",["C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Method$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$IntConst$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$File.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Final.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Name$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Method.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$BlockStmt.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Divide$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Not$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$PackageLocal$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$ModuleHeader.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Ternary.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\LexicalParser.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Abstract$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$RBinOp.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Public$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$ObjectModel$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Assign$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$If$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$RefSpecial.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$TraitModel$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Protected.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$GreaterEqual$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$ArrayValue$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$For$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Inherits$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Equal$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$RefQual.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$RefLocal$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Less$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Return$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Private$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\StatementParser$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Operator.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Match$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Import.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Lambda.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$ExprAsStmt$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Protected$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$BlockStmt$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$IntObject$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$NameSpace.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Match.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Ref.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$NewClassInstance$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Type$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Equals$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Assign.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Private.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$BBinary$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$If.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$ModuleHeader$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Case.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$ArrayValue.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Ternary$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$TraitModel.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$RefLocal.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$BlockExpr.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$IntConst.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$LongConst$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$CurlyBraceBlock$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Block.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$BoolConst$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$RefSpecial$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\main$package.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Lambda$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$SpecialRefAsExpr.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Field.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$AssignMultiple.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$NestedExpr$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Reassign.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Negate.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\LexicalParser$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$ClassModel$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Negate$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Identifier.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$DoubleConst.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$RBinary.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Super$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Annotation.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Pure$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Statement.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$NewClassInstance.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$LongConst.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Public.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Subtract$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Import$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\StatementParser.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$FloatConst.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$BBinOp.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$FloatConst$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$ExprAsStmt.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$SpecialRef.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$While.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Identifier$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$RBinary$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Name.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$MethodCall.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Case$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Extends.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$And$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$AssignMultiple$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$QualName$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$QualName.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Extends$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Abstract.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$MethodCall$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$This.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Not.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Or$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$RefQual$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Super.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Greater$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Final$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$ObjectModel.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Return.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$BlockExpr$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Tuple.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$ABinOp.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$For.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$ClassModel.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Expression.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$File$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Reassign$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$NameSpace$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\ExpressionParser$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$CurlyBraceBlock.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$TypeRel.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Modifier.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$SpecialRefAsExpr$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Equals.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$IntObject.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Add$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Field$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$LessEqual$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$NestedExpr.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Inline.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\main.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$PackageLocal.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$BoolConst.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Annotation$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Pure.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Inherits.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Tuple$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\ExpressionParser.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$DoubleConst$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Inline$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$StringLiteral.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$This$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$BBinary.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$StringLiteral$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Model.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$ABinary$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\main$package$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$ABinary.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Multiply$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$Type.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\classes\\compiler\\AST$While$.class","C:\\Users\\micha\\IdeaProjects\\compiler\\target\\scala-3.3.0\\zinc\\inc_compile_3.zip"]]